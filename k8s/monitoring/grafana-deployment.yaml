apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: config
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    
    [grafana_net]
    url = https://grafana.net
    
    [log]
    mode = console
    
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    
    [server]
    root_url = http://grafana.monitoring.svc.cluster.local:3000
    
    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_role = Viewer
    
    [auth.anonymous]
    enabled = true
    org_name = Main Org.
    org_role = Viewer
    
    [security]
    admin_user = admin
    admin_password = admin123
    allow_embedding = true
    
    [alerting]
    enabled = false
    
    [unified_alerting]
    enabled = true

  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus.monitoring.svc.cluster.local:9090
      isDefault: true
      editable: true
      jsonData:
        timeInterval: 15s

  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: dashboards
data:
  fraud-detection-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "üõ°Ô∏è Fraud Detection ML API Dashboard",
        "tags": ["fraud-detection", "ml", "api"],
        "style": "dark",
        "timezone": "UTC",
        "panels": [
          {
            "id": 1,
            "title": "üìä API Requests Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(ml_predictions_total{job=\"fraud-detection-api\"}[5m])",
                "legendFormat": "Predictions/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "basic"},
                "unit": "reqps"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "‚ö° Response Time (P95)",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(ml_prediction_duration_seconds_bucket{job=\"fraud-detection-api\"}[5m]))",
                "legendFormat": "P95 Latency"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "thresholds"},
                "custom": {"displayMode": "basic"},
                "unit": "s",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": 0},
                    {"color": "yellow", "value": 0.3},
                    {"color": "red", "value": 0.5}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "üö® Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "(rate(ml_prediction_errors_total{job=\"fraud-detection-api\"}[5m]) / rate(ml_predictions_total{job=\"fraud-detection-api\"}[5m])) * 100",
                "legendFormat": "Error Rate %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "thresholds"},
                "custom": {"displayMode": "basic"},
                "unit": "percent",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": 0},
                    {"color": "yellow", "value": 2},
                    {"color": "red", "value": 5}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 0}
          },
          {
            "id": 4,
            "title": "üîÑ Active Replicas",
            "type": "stat",
            "targets": [
              {
                "expr": "kube_deployment_status_replicas{namespace=\"fraud-detection\", deployment=\"fraud-detection-api\"}",
                "legendFormat": "Replicas"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "thresholds"},
                "custom": {"displayMode": "basic"},
                "unit": "short",
                "thresholds": {
                  "steps": [
                    {"color": "blue", "value": 4},
                    {"color": "yellow", "value": 5},
                    {"color": "red", "value": 6}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
          },
          {
            "id": 5,
            "title": "üìà CPU Usage by Pod",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{namespace=\"fraud-detection\", pod=~\"fraud-detection-api-.*\"}[5m]) * 100",
                "legendFormat": "{{ pod }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "table", "showLegend": true},
                "unit": "percent",
                "max": 100
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 6,
            "title": "üíæ Memory Usage by Pod",
            "type": "timeseries",
            "targets": [
              {
                "expr": "(container_memory_working_set_bytes{namespace=\"fraud-detection\", pod=~\"fraud-detection-api-.*\"} / container_spec_memory_limit_bytes{namespace=\"fraud-detection\", pod=~\"fraud-detection-api-.*\"}) * 100",
                "legendFormat": "{{ pod }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "table", "showLegend": true},
                "unit": "percent",
                "max": 100
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          },
          {
            "id": 7,
            "title": "üéØ Fraud Detection Rate",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(ml_predictions_total{job=\"fraud-detection-api\", prediction=\"fraud\"}[5m]) / rate(ml_predictions_total{job=\"fraud-detection-api\"}[5m]) * 100",
                "legendFormat": "Fraud Detection Rate %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "basic"},
                "unit": "percent"
              }
            },
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 16}
          },
          {
            "id": 8,
            "title": "üî• High Load Alert Status",
            "type": "alert-list",
            "targets": [],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "thresholds"},
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": 0},
                    {"color": "red", "value": 1}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 24},
            "options": {
              "alertName": "FraudDetectionHighLoad",
              "dashboardAlerts": false,
              "groupBy": ["severity"],
              "groupMode": "default",
              "maxItems": 20,
              "query": "",
              "showOptions": "current",
              "sortOrder": 1,
              "tags": ["fraud-detection"]
            }
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "timepicker": {},
        "templating": {"list": []},
        "annotations": {"list": []},
        "refresh": "10s",
        "schemaVersion": 27,
        "version": 1,
        "links": []
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: server
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.0.0
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-config
          mountPath: /etc/grafana
        - name: grafana-provisioning-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-provisioning-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        - name: grafana-storage
          mountPath: /var/lib/grafana
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
          items:
          - key: grafana.ini
            path: grafana.ini
      - name: grafana-provisioning-datasources
        configMap:
          name: grafana-config
          items:
          - key: datasources.yaml
            path: datasources.yaml
      - name: grafana-provisioning-dashboards
        configMap:
          name: grafana-config
          items:
          - key: dashboards.yaml
            path: dashboards.yaml
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
