# Airflow deployment с поддержкой приватных Git репозиториев
apiVersion: v1
kind: Secret
metadata:
  name: git-ssh-key
  namespace: airflow
type: Opaque
data:
  # Base64 encoded SSH private key
  # Создать: cat ~/.ssh/id_rsa | base64 | tr -d '\n'
  ssh-privatekey: LS0tLS1CRUdJTi0tLS0tCi0tLS0tRU5ELS0tLS0K  # Заменить на ваш ключ
  # Base64 encoded known_hosts
  # Создать: ssh-keyscan github.com | base64 | tr -d '\n'
  known_hosts: Z2l0aHViLmNvbSBlY2RzYS1zaGEyLW5pc3RwMjU2IEFBQUFBQ=  # Заменить на реальный

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: git-ssh-config
  namespace: airflow
data:
  config: |
    Host github.com
        HostName github.com
        User git
        IdentityFile /etc/git-secret/ssh-privatekey
        StrictHostKeyChecking no

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver-private
  namespace: airflow
  labels:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/component: webserver-private
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/component: webserver-private
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        app.kubernetes.io/component: webserver-private
    spec:
      containers:
      - name: airflow-webserver
        image: apache/airflow:2.8.0-python3.11
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: "LocalExecutor"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: "/opt/airflow/dags"
        - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
          value: "true"
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: "false"
        command:
        - bash
        - -c
        - |
          # Initialize database
          airflow db init
          
          # Create admin user
          airflow users create \
            --username admin \
            --firstname Airflow \
            --lastname Admin \
            --role Admin \
            --email admin@example.com \
            --password admin
          
          # Start webserver
          exec airflow webserver
        volumeMounts:
        - name: dags-volume
          mountPath: /opt/airflow/dags
        - name: logs-volume
          mountPath: /opt/airflow/logs
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi

      # Git Sync с поддержкой SSH для приватных репозиториев
      - name: git-sync-private
        image: k8s.gcr.io/git-sync/git-sync:v3.6.3
        env:
        # Для приватного репозитория используйте SSH URL
        - name: GIT_SYNC_REPO
          value: "git@github.com:mrPDA/private-dags-repo.git"  # SSH URL
        - name: GIT_SYNC_BRANCH
          value: "main"
        - name: GIT_SYNC_ROOT
          value: "/git"
        - name: GIT_SYNC_DEST
          value: "repo"
        - name: GIT_SYNC_WAIT
          value: "60"
        - name: GIT_SYNC_ONE_TIME
          value: "false"
        - name: GIT_SYNC_SSH
          value: "true"
        - name: GIT_SSH_KEY_FILE
          value: "/etc/git-secret/ssh-privatekey"
        - name: GIT_SSH_KNOWN_HOSTS_FILE
          value: "/etc/git-secret/known_hosts"
        - name: GIT_SYNC_PERMISSIONS
          value: "0755"
        volumeMounts:
        - name: git-volume
          mountPath: /git
        - name: git-ssh-key
          mountPath: /etc/git-secret
          readOnly: true
        - name: git-ssh-config
          mountPath: /root/.ssh
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi

      # DAG Processor
      - name: dag-processor
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          while true; do
            if [ -d "/git/repo/dags" ]; then
              echo "Copying DAGs from private Git repo..."
              cp -r /git/repo/dags/* /opt/airflow/dags/ 2>/dev/null || true
              echo "DAGs copied successfully"
            else
              echo "Waiting for Git sync..."
            fi
            sleep 60
          done
        volumeMounts:
        - name: git-volume
          mountPath: /git
        - name: dags-volume
          mountPath: /opt/airflow/dags
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 64Mi

      volumes:
      - name: dags-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: git-volume
        emptyDir: {}
      - name: git-ssh-key
        secret:
          secretName: git-ssh-key
          defaultMode: 0600
      - name: git-ssh-config
        configMap:
          name: git-ssh-config
          defaultMode: 0600

---
# Alternative: Git Sync с Personal Access Token для HTTPS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver-token
  namespace: airflow
  labels:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/component: webserver-token
spec:
  replicas: 0  # Отключен по умолчанию
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/component: webserver-token
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        app.kubernetes.io/component: webserver-token
    spec:
      containers:
      - name: airflow-webserver
        image: apache/airflow:2.8.0-python3.11
        # ... (тот же контейнер Airflow)

      # Git Sync с Personal Access Token
      - name: git-sync-token
        image: k8s.gcr.io/git-sync/git-sync:v3.6.3
        env:
        # Для приватного репозитория с Personal Access Token
        - name: GIT_SYNC_REPO
          value: "https://username:$(GIT_TOKEN)@github.com/mrPDA/private-dags-repo.git"
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: token
        - name: GIT_SYNC_BRANCH
          value: "main"
        - name: GIT_SYNC_ROOT
          value: "/git"
        - name: GIT_SYNC_DEST
          value: "repo"
        - name: GIT_SYNC_WAIT
          value: "60"
        - name: GIT_SYNC_ONE_TIME
          value: "false"
        volumeMounts:
        - name: git-volume
          mountPath: /git

      volumes:
      - name: git-volume
        emptyDir: {}

---
# Secret для Personal Access Token
apiVersion: v1
kind: Secret
metadata:
  name: git-credentials
  namespace: airflow
type: Opaque
data:
  # Base64 encoded Personal Access Token
  # Создать: echo -n "your_token_here" | base64
  token: eW91cl90b2tlbl9oZXJl  # Заменить на ваш токен
