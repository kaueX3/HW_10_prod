apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow
  labels:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/component: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/component: webserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        app.kubernetes.io/component: webserver
    spec:
      containers:
      - name: airflow-webserver
        image: apache/airflow:2.8.0-python3.11
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: "LocalExecutor"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: "/opt/airflow/dags"
        - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
          value: "true"
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: "false"
        - name: AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT
          value: "30"
        # Git Sync Configuration
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: "false"
        command:
        - bash
        - -c
        - |
          # Initialize database
          airflow db init
          
          # Create admin user
          airflow users create \
            --username admin \
            --firstname Airflow \
            --lastname Admin \
            --role Admin \
            --email admin@example.com \
            --password admin
          
          # Start webserver
          exec airflow webserver
        volumeMounts:
        - name: dags-volume
          mountPath: /opt/airflow/dags
        - name: logs-volume
          mountPath: /opt/airflow/logs
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi

      # Git Sync Sidecar Container для DAGs
      - name: git-sync
        image: k8s.gcr.io/git-sync/git-sync:v3.6.3
        env:
        - name: GIT_SYNC_REPO
          value: "https://github.com/mrPDA/HW_9_prod.git"  # Ваш репозиторий с DAGs
        - name: GIT_SYNC_BRANCH
          value: "main"
        - name: GIT_SYNC_ROOT
          value: "/git"
        - name: GIT_SYNC_DEST
          value: "repo"
        - name: GIT_SYNC_WAIT
          value: "60"  # Синхронизация каждую минуту
        - name: GIT_SYNC_ONE_TIME
          value: "false"
        - name: GIT_SYNC_MAX_SYNC_FAILURES
          value: "5"
        volumeMounts:
        - name: git-volume
          mountPath: /git
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi

      # DAG Processor для копирования DAGs из Git
      - name: dag-processor
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          while true; do
            if [ -d "/git/repo/dags" ]; then
              echo "Copying DAGs from Git repo..."
              cp -r /git/repo/dags/* /opt/airflow/dags/ 2>/dev/null || true
              echo "DAGs copied successfully"
            else
              echo "Waiting for Git sync..."
            fi
            sleep 60
          done
        volumeMounts:
        - name: git-volume
          mountPath: /git
        - name: dags-volume
          mountPath: /opt/airflow/dags
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 64Mi

      volumes:
      - name: dags-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: git-volume
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
  labels:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/component: scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/component: scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        app.kubernetes.io/component: scheduler
    spec:
      containers:
      - name: airflow-scheduler
        image: apache/airflow:2.8.0-python3.11
        command:
        - bash
        - -c
        - |
          # Wait for webserver to initialize DB
          sleep 30
          exec airflow scheduler
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: "LocalExecutor"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: "/opt/airflow/dags"
        volumeMounts:
        - name: dags-volume
          mountPath: /opt/airflow/dags
        - name: logs-volume
          mountPath: /opt/airflow/logs
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi

      # Git Sync для Scheduler
      - name: git-sync
        image: k8s.gcr.io/git-sync/git-sync:v3.6.3
        env:
        - name: GIT_SYNC_REPO
          value: "https://github.com/mrPDA/HW_9_prod.git"
        - name: GIT_SYNC_BRANCH
          value: "main"
        - name: GIT_SYNC_ROOT
          value: "/git"
        - name: GIT_SYNC_DEST
          value: "repo"
        - name: GIT_SYNC_WAIT
          value: "60"
        - name: GIT_SYNC_ONE_TIME
          value: "false"
        volumeMounts:
        - name: git-volume
          mountPath: /git

      # DAG Processor для Scheduler
      - name: dag-processor
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          while true; do
            if [ -d "/git/repo/dags" ]; then
              cp -r /git/repo/dags/* /opt/airflow/dags/ 2>/dev/null || true
            fi
            sleep 60
          done
        volumeMounts:
        - name: git-volume
          mountPath: /git
        - name: dags-volume
          mountPath: /opt/airflow/dags

      volumes:
      - name: dags-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: git-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow
  labels:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/component: webserver
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/component: webserver
